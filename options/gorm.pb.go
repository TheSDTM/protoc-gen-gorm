// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: options/gorm.proto

package gorm

import (
	descriptor "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GormFileOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GormFileOptions) Reset() {
	*x = GormFileOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GormFileOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GormFileOptions) ProtoMessage() {}

func (x *GormFileOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GormFileOptions.ProtoReflect.Descriptor instead.
func (*GormFileOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{0}
}

type GormMessageOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ormable *bool         `protobuf:"varint,1,req,name=ormable" json:"ormable,omitempty"`
	Include []*ExtraField `protobuf:"bytes,2,rep,name=include" json:"include,omitempty"`
	Table   *string       `protobuf:"bytes,3,opt,name=table" json:"table,omitempty"`
}

func (x *GormMessageOptions) Reset() {
	*x = GormMessageOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GormMessageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GormMessageOptions) ProtoMessage() {}

func (x *GormMessageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GormMessageOptions.ProtoReflect.Descriptor instead.
func (*GormMessageOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{1}
}

func (x *GormMessageOptions) GetOrmable() bool {
	if x != nil && x.Ormable != nil {
		return *x.Ormable
	}
	return false
}

func (x *GormMessageOptions) GetInclude() []*ExtraField {
	if x != nil {
		return x.Include
	}
	return nil
}

func (x *GormMessageOptions) GetTable() string {
	if x != nil && x.Table != nil {
		return *x.Table
	}
	return ""
}

type ExtraField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *string  `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Name    *string  `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Tag     *GormTag `protobuf:"bytes,3,opt,name=tag" json:"tag,omitempty"`
	Package *string  `protobuf:"bytes,4,opt,name=package" json:"package,omitempty"`
}

func (x *ExtraField) Reset() {
	*x = ExtraField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtraField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtraField) ProtoMessage() {}

func (x *ExtraField) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtraField.ProtoReflect.Descriptor instead.
func (*ExtraField) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{2}
}

func (x *ExtraField) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ExtraField) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ExtraField) GetTag() *GormTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *ExtraField) GetPackage() string {
	if x != nil && x.Package != nil {
		return *x.Package
	}
	return ""
}

type GormFieldOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag  *GormTag `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Drop *bool    `protobuf:"varint,2,opt,name=drop" json:"drop,omitempty"`
	// Types that are assignable to Association:
	//	*GormFieldOptions_HasOne
	//	*GormFieldOptions_BelongsTo
	//	*GormFieldOptions_HasMany
	//	*GormFieldOptions_ManyToMany
	Association isGormFieldOptions_Association `protobuf_oneof:"association"`
	ReferenceOf *string                        `protobuf:"bytes,7,opt,name=reference_of,json=referenceOf" json:"reference_of,omitempty"`
}

func (x *GormFieldOptions) Reset() {
	*x = GormFieldOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GormFieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GormFieldOptions) ProtoMessage() {}

func (x *GormFieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GormFieldOptions.ProtoReflect.Descriptor instead.
func (*GormFieldOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{3}
}

func (x *GormFieldOptions) GetTag() *GormTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *GormFieldOptions) GetDrop() bool {
	if x != nil && x.Drop != nil {
		return *x.Drop
	}
	return false
}

func (m *GormFieldOptions) GetAssociation() isGormFieldOptions_Association {
	if m != nil {
		return m.Association
	}
	return nil
}

func (x *GormFieldOptions) GetHasOne() *HasOneOptions {
	if x, ok := x.GetAssociation().(*GormFieldOptions_HasOne); ok {
		return x.HasOne
	}
	return nil
}

func (x *GormFieldOptions) GetBelongsTo() *BelongsToOptions {
	if x, ok := x.GetAssociation().(*GormFieldOptions_BelongsTo); ok {
		return x.BelongsTo
	}
	return nil
}

func (x *GormFieldOptions) GetHasMany() *HasManyOptions {
	if x, ok := x.GetAssociation().(*GormFieldOptions_HasMany); ok {
		return x.HasMany
	}
	return nil
}

func (x *GormFieldOptions) GetManyToMany() *ManyToManyOptions {
	if x, ok := x.GetAssociation().(*GormFieldOptions_ManyToMany); ok {
		return x.ManyToMany
	}
	return nil
}

func (x *GormFieldOptions) GetReferenceOf() string {
	if x != nil && x.ReferenceOf != nil {
		return *x.ReferenceOf
	}
	return ""
}

type isGormFieldOptions_Association interface {
	isGormFieldOptions_Association()
}

type GormFieldOptions_HasOne struct {
	HasOne *HasOneOptions `protobuf:"bytes,3,opt,name=has_one,json=hasOne,oneof"`
}

type GormFieldOptions_BelongsTo struct {
	BelongsTo *BelongsToOptions `protobuf:"bytes,4,opt,name=belongs_to,json=belongsTo,oneof"`
}

type GormFieldOptions_HasMany struct {
	HasMany *HasManyOptions `protobuf:"bytes,5,opt,name=has_many,json=hasMany,oneof"`
}

type GormFieldOptions_ManyToMany struct {
	ManyToMany *ManyToManyOptions `protobuf:"bytes,6,opt,name=many_to_many,json=manyToMany,oneof"`
}

func (*GormFieldOptions_HasOne) isGormFieldOptions_Association() {}

func (*GormFieldOptions_BelongsTo) isGormFieldOptions_Association() {}

func (*GormFieldOptions_HasMany) isGormFieldOptions_Association() {}

func (*GormFieldOptions_ManyToMany) isGormFieldOptions_Association() {}

type GormTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column         *string `protobuf:"bytes,1,opt,name=column" json:"column,omitempty"`
	Type           *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Size           *int32  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Precision      *int32  `protobuf:"varint,4,opt,name=precision" json:"precision,omitempty"`
	PrimaryKey     *bool   `protobuf:"varint,5,opt,name=primary_key,json=primaryKey" json:"primary_key,omitempty"`
	Unique         *bool   `protobuf:"varint,6,opt,name=unique" json:"unique,omitempty"`
	Default        *string `protobuf:"bytes,7,opt,name=default" json:"default,omitempty"`
	NotNull        *bool   `protobuf:"varint,8,opt,name=not_null,json=notNull" json:"not_null,omitempty"`
	AutoIncrement  *bool   `protobuf:"varint,9,opt,name=auto_increment,json=autoIncrement" json:"auto_increment,omitempty"`
	Index          *string `protobuf:"bytes,10,opt,name=index" json:"index,omitempty"`
	UniqueIndex    *string `protobuf:"bytes,11,opt,name=unique_index,json=uniqueIndex" json:"unique_index,omitempty"`
	Embedded       *bool   `protobuf:"varint,12,opt,name=embedded" json:"embedded,omitempty"`
	EmbeddedPrefix *string `protobuf:"bytes,13,opt,name=embedded_prefix,json=embeddedPrefix" json:"embedded_prefix,omitempty"`
	Ignore         *bool   `protobuf:"varint,14,opt,name=ignore" json:"ignore,omitempty"`
	ForeignKey     *string `protobuf:"bytes,15,opt,name=foreign_key,json=foreignKey" json:"foreign_key,omitempty"`
	References     *string `protobuf:"bytes,16,opt,name=references" json:"references,omitempty"`
	ManyToMany     *string `protobuf:"bytes,17,opt,name=many_to_many,json=manyToMany" json:"many_to_many,omitempty"`
	JoinForeignKey *string `protobuf:"bytes,18,opt,name=join_foreign_key,json=joinForeignKey" json:"join_foreign_key,omitempty"`
	JoinReferences *string `protobuf:"bytes,19,opt,name=join_references,json=joinReferences" json:"join_references,omitempty"`
}

func (x *GormTag) Reset() {
	*x = GormTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GormTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GormTag) ProtoMessage() {}

func (x *GormTag) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GormTag.ProtoReflect.Descriptor instead.
func (*GormTag) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{4}
}

func (x *GormTag) GetColumn() string {
	if x != nil && x.Column != nil {
		return *x.Column
	}
	return ""
}

func (x *GormTag) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *GormTag) GetSize() int32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *GormTag) GetPrecision() int32 {
	if x != nil && x.Precision != nil {
		return *x.Precision
	}
	return 0
}

func (x *GormTag) GetPrimaryKey() bool {
	if x != nil && x.PrimaryKey != nil {
		return *x.PrimaryKey
	}
	return false
}

func (x *GormTag) GetUnique() bool {
	if x != nil && x.Unique != nil {
		return *x.Unique
	}
	return false
}

func (x *GormTag) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

func (x *GormTag) GetNotNull() bool {
	if x != nil && x.NotNull != nil {
		return *x.NotNull
	}
	return false
}

func (x *GormTag) GetAutoIncrement() bool {
	if x != nil && x.AutoIncrement != nil {
		return *x.AutoIncrement
	}
	return false
}

func (x *GormTag) GetIndex() string {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return ""
}

func (x *GormTag) GetUniqueIndex() string {
	if x != nil && x.UniqueIndex != nil {
		return *x.UniqueIndex
	}
	return ""
}

func (x *GormTag) GetEmbedded() bool {
	if x != nil && x.Embedded != nil {
		return *x.Embedded
	}
	return false
}

func (x *GormTag) GetEmbeddedPrefix() string {
	if x != nil && x.EmbeddedPrefix != nil {
		return *x.EmbeddedPrefix
	}
	return ""
}

func (x *GormTag) GetIgnore() bool {
	if x != nil && x.Ignore != nil {
		return *x.Ignore
	}
	return false
}

func (x *GormTag) GetForeignKey() string {
	if x != nil && x.ForeignKey != nil {
		return *x.ForeignKey
	}
	return ""
}

func (x *GormTag) GetReferences() string {
	if x != nil && x.References != nil {
		return *x.References
	}
	return ""
}

func (x *GormTag) GetManyToMany() string {
	if x != nil && x.ManyToMany != nil {
		return *x.ManyToMany
	}
	return ""
}

func (x *GormTag) GetJoinForeignKey() string {
	if x != nil && x.JoinForeignKey != nil {
		return *x.JoinForeignKey
	}
	return ""
}

func (x *GormTag) GetJoinReferences() string {
	if x != nil && x.JoinReferences != nil {
		return *x.JoinReferences
	}
	return ""
}

type HasOneOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForeignKey    *string  `protobuf:"bytes,1,opt,name=foreign_key,json=foreignKey" json:"foreign_key,omitempty"`
	ForeignKeyTag *GormTag `protobuf:"bytes,2,opt,name=foreign_key_tag,json=foreignKeyTag" json:"foreign_key_tag,omitempty"`
	References    *string  `protobuf:"bytes,3,opt,name=references" json:"references,omitempty"`
}

func (x *HasOneOptions) Reset() {
	*x = HasOneOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasOneOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasOneOptions) ProtoMessage() {}

func (x *HasOneOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasOneOptions.ProtoReflect.Descriptor instead.
func (*HasOneOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{5}
}

func (x *HasOneOptions) GetForeignKey() string {
	if x != nil && x.ForeignKey != nil {
		return *x.ForeignKey
	}
	return ""
}

func (x *HasOneOptions) GetForeignKeyTag() *GormTag {
	if x != nil {
		return x.ForeignKeyTag
	}
	return nil
}

func (x *HasOneOptions) GetReferences() string {
	if x != nil && x.References != nil {
		return *x.References
	}
	return ""
}

type BelongsToOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForeignKey    *string  `protobuf:"bytes,1,opt,name=foreign_key,json=foreignKey" json:"foreign_key,omitempty"`
	ForeignKeyTag *GormTag `protobuf:"bytes,2,opt,name=foreign_key_tag,json=foreignKeyTag" json:"foreign_key_tag,omitempty"`
	References    *string  `protobuf:"bytes,3,opt,name=references" json:"references,omitempty"`
}

func (x *BelongsToOptions) Reset() {
	*x = BelongsToOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BelongsToOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BelongsToOptions) ProtoMessage() {}

func (x *BelongsToOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BelongsToOptions.ProtoReflect.Descriptor instead.
func (*BelongsToOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{6}
}

func (x *BelongsToOptions) GetForeignKey() string {
	if x != nil && x.ForeignKey != nil {
		return *x.ForeignKey
	}
	return ""
}

func (x *BelongsToOptions) GetForeignKeyTag() *GormTag {
	if x != nil {
		return x.ForeignKeyTag
	}
	return nil
}

func (x *BelongsToOptions) GetReferences() string {
	if x != nil && x.References != nil {
		return *x.References
	}
	return ""
}

type HasManyOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForeignKey    *string  `protobuf:"bytes,1,opt,name=foreign_key,json=foreignKey" json:"foreign_key,omitempty"`
	ForeignKeyTag *GormTag `protobuf:"bytes,2,opt,name=foreign_key_tag,json=foreignKeyTag" json:"foreign_key_tag,omitempty"`
	References    *string  `protobuf:"bytes,3,opt,name=references" json:"references,omitempty"`
}

func (x *HasManyOptions) Reset() {
	*x = HasManyOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasManyOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasManyOptions) ProtoMessage() {}

func (x *HasManyOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasManyOptions.ProtoReflect.Descriptor instead.
func (*HasManyOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{7}
}

func (x *HasManyOptions) GetForeignKey() string {
	if x != nil && x.ForeignKey != nil {
		return *x.ForeignKey
	}
	return ""
}

func (x *HasManyOptions) GetForeignKeyTag() *GormTag {
	if x != nil {
		return x.ForeignKeyTag
	}
	return nil
}

func (x *HasManyOptions) GetReferences() string {
	if x != nil && x.References != nil {
		return *x.References
	}
	return ""
}

type ManyToManyOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jointable      *string `protobuf:"bytes,1,opt,name=jointable" json:"jointable,omitempty"`
	ForeignKey     *string `protobuf:"bytes,2,opt,name=foreign_key,json=foreignKey" json:"foreign_key,omitempty"`
	JoinForeignKey *string `protobuf:"bytes,3,opt,name=join_foreign_key,json=joinForeignKey" json:"join_foreign_key,omitempty"`
	References     *string `protobuf:"bytes,4,opt,name=references" json:"references,omitempty"`
	JoinReferences *string `protobuf:"bytes,5,opt,name=join_references,json=joinReferences" json:"join_references,omitempty"`
}

func (x *ManyToManyOptions) Reset() {
	*x = ManyToManyOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_options_gorm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManyToManyOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManyToManyOptions) ProtoMessage() {}

func (x *ManyToManyOptions) ProtoReflect() protoreflect.Message {
	mi := &file_options_gorm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManyToManyOptions.ProtoReflect.Descriptor instead.
func (*ManyToManyOptions) Descriptor() ([]byte, []int) {
	return file_options_gorm_proto_rawDescGZIP(), []int{8}
}

func (x *ManyToManyOptions) GetJointable() string {
	if x != nil && x.Jointable != nil {
		return *x.Jointable
	}
	return ""
}

func (x *ManyToManyOptions) GetForeignKey() string {
	if x != nil && x.ForeignKey != nil {
		return *x.ForeignKey
	}
	return ""
}

func (x *ManyToManyOptions) GetJoinForeignKey() string {
	if x != nil && x.JoinForeignKey != nil {
		return *x.JoinForeignKey
	}
	return ""
}

func (x *ManyToManyOptions) GetReferences() string {
	if x != nil && x.References != nil {
		return *x.References
	}
	return ""
}

func (x *ManyToManyOptions) GetJoinReferences() string {
	if x != nil && x.JoinReferences != nil {
		return *x.JoinReferences
	}
	return ""
}

var file_options_gorm_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.FileOptions)(nil),
		ExtensionType: (*GormFileOptions)(nil),
		Field:         52119,
		Name:          "gorm.file_opts",
		Tag:           "bytes,52119,opt,name=file_opts",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptor.MessageOptions)(nil),
		ExtensionType: (*GormMessageOptions)(nil),
		Field:         52119,
		Name:          "gorm.opts",
		Tag:           "bytes,52119,opt,name=opts",
		Filename:      "options/gorm.proto",
	},
	{
		ExtendedType:  (*descriptor.FieldOptions)(nil),
		ExtensionType: (*GormFieldOptions)(nil),
		Field:         52119,
		Name:          "gorm.field",
		Tag:           "bytes,52119,opt,name=field",
		Filename:      "options/gorm.proto",
	},
}

// Extension fields to descriptor.FileOptions.
var (
	// optional gorm.GormFileOptions file_opts = 52119;
	E_FileOpts = &file_options_gorm_proto_extTypes[0]
)

// Extension fields to descriptor.MessageOptions.
var (
	// ormable will cause orm code to be generated for this message/object
	//
	// optional gorm.GormMessageOptions opts = 52119;
	E_Opts = &file_options_gorm_proto_extTypes[1]
)

// Extension fields to descriptor.FieldOptions.
var (
	// optional gorm.GormFieldOptions field = 52119;
	E_Field = &file_options_gorm_proto_extTypes[2]
)

var File_options_gorm_proto protoreflect.FileDescriptor

var file_options_gorm_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x6f, 0x72, 0x6d, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f,
	0x47, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x70, 0x0a, 0x12, 0x47, 0x6f, 0x72, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x6d, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x6f, 0x72, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x2a, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x6f, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d,
	0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x10, 0x47, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d,
	0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x12, 0x2e, 0x0a, 0x07,
	0x68, 0x61, 0x73, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x48, 0x61, 0x73, 0x4f, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x48, 0x00, 0x52, 0x06, 0x68, 0x61, 0x73, 0x4f, 0x6e, 0x65, 0x12, 0x37, 0x0a, 0x0a,
	0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x54,
	0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x09, 0x62, 0x65, 0x6c, 0x6f,
	0x6e, 0x67, 0x73, 0x54, 0x6f, 0x12, 0x31, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x61, 0x6e,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x48,
	0x61, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x68, 0x61, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x3b, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x79,
	0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x4d, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x79, 0x54,
	0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x6f, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x0d, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc8, 0x04, 0x0a, 0x07, 0x47, 0x6f, 0x72, 0x6d,
	0x54, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6c, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x4e, 0x75, 0x6c, 0x6c, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c,
	0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0c, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x12,
	0x28, 0x0a, 0x10, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x46,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x4f, 0x6e, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69,
	0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x52, 0x0d, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x54, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a,
	0x10, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x54, 0x6f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b,
	0x65, 0x79, 0x12, 0x35, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6f,
	0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x54, 0x61, 0x67, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x54, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x48, 0x61,
	0x73, 0x4d, 0x61, 0x6e, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x35, 0x0a,
	0x0f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x61, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f,
	0x72, 0x6d, 0x54, 0x61, 0x67, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65,
	0x79, 0x54, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x11, 0x4d, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x4d,
	0x61, 0x6e, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f,
	0x69, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a,
	0x6f, 0x69, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x6a, 0x6f, 0x69,
	0x6e, 0x5f, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a, 0x6f, 0x69, 0x6e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e,
	0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6a, 0x6f,
	0x69, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x3a, 0x52, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x97, 0x97, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x73,
	0x3a, 0x4f, 0x0a, 0x04, 0x6f, 0x70, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x97, 0x97, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x6f, 0x70, 0x74,
	0x73, 0x3a, 0x4d, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x97, 0x97, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x6f, 0x72, 0x6d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x54,
	0x68, 0x65, 0x53, 0x44, 0x54, 0x4d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65,
	0x6e, 0x2d, 0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3b, 0x67,
	0x6f, 0x72, 0x6d,
}

var (
	file_options_gorm_proto_rawDescOnce sync.Once
	file_options_gorm_proto_rawDescData = file_options_gorm_proto_rawDesc
)

func file_options_gorm_proto_rawDescGZIP() []byte {
	file_options_gorm_proto_rawDescOnce.Do(func() {
		file_options_gorm_proto_rawDescData = protoimpl.X.CompressGZIP(file_options_gorm_proto_rawDescData)
	})
	return file_options_gorm_proto_rawDescData
}

var file_options_gorm_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_options_gorm_proto_goTypes = []interface{}{
	(*GormFileOptions)(nil),           // 0: gorm.GormFileOptions
	(*GormMessageOptions)(nil),        // 1: gorm.GormMessageOptions
	(*ExtraField)(nil),                // 2: gorm.ExtraField
	(*GormFieldOptions)(nil),          // 3: gorm.GormFieldOptions
	(*GormTag)(nil),                   // 4: gorm.GormTag
	(*HasOneOptions)(nil),             // 5: gorm.HasOneOptions
	(*BelongsToOptions)(nil),          // 6: gorm.BelongsToOptions
	(*HasManyOptions)(nil),            // 7: gorm.HasManyOptions
	(*ManyToManyOptions)(nil),         // 8: gorm.ManyToManyOptions
	(*descriptor.FileOptions)(nil),    // 9: google.protobuf.FileOptions
	(*descriptor.MessageOptions)(nil), // 10: google.protobuf.MessageOptions
	(*descriptor.FieldOptions)(nil),   // 11: google.protobuf.FieldOptions
}
var file_options_gorm_proto_depIdxs = []int32{
	2,  // 0: gorm.GormMessageOptions.include:type_name -> gorm.ExtraField
	4,  // 1: gorm.ExtraField.tag:type_name -> gorm.GormTag
	4,  // 2: gorm.GormFieldOptions.tag:type_name -> gorm.GormTag
	5,  // 3: gorm.GormFieldOptions.has_one:type_name -> gorm.HasOneOptions
	6,  // 4: gorm.GormFieldOptions.belongs_to:type_name -> gorm.BelongsToOptions
	7,  // 5: gorm.GormFieldOptions.has_many:type_name -> gorm.HasManyOptions
	8,  // 6: gorm.GormFieldOptions.many_to_many:type_name -> gorm.ManyToManyOptions
	4,  // 7: gorm.HasOneOptions.foreign_key_tag:type_name -> gorm.GormTag
	4,  // 8: gorm.BelongsToOptions.foreign_key_tag:type_name -> gorm.GormTag
	4,  // 9: gorm.HasManyOptions.foreign_key_tag:type_name -> gorm.GormTag
	9,  // 10: gorm.file_opts:extendee -> google.protobuf.FileOptions
	10, // 11: gorm.opts:extendee -> google.protobuf.MessageOptions
	11, // 12: gorm.field:extendee -> google.protobuf.FieldOptions
	0,  // 13: gorm.file_opts:type_name -> gorm.GormFileOptions
	1,  // 14: gorm.opts:type_name -> gorm.GormMessageOptions
	3,  // 15: gorm.field:type_name -> gorm.GormFieldOptions
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	13, // [13:16] is the sub-list for extension type_name
	10, // [10:13] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_options_gorm_proto_init() }
func file_options_gorm_proto_init() {
	if File_options_gorm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_options_gorm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GormFileOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GormMessageOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtraField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GormFieldOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GormTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasOneOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BelongsToOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasManyOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_options_gorm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManyToManyOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_options_gorm_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*GormFieldOptions_HasOne)(nil),
		(*GormFieldOptions_BelongsTo)(nil),
		(*GormFieldOptions_HasMany)(nil),
		(*GormFieldOptions_ManyToMany)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_options_gorm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_options_gorm_proto_goTypes,
		DependencyIndexes: file_options_gorm_proto_depIdxs,
		MessageInfos:      file_options_gorm_proto_msgTypes,
		ExtensionInfos:    file_options_gorm_proto_extTypes,
	}.Build()
	File_options_gorm_proto = out.File
	file_options_gorm_proto_rawDesc = nil
	file_options_gorm_proto_goTypes = nil
	file_options_gorm_proto_depIdxs = nil
}
